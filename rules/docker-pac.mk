# docker image for pac 

DOCKER_PAC_STEM = docker-pac
DOCKER_PAC = $(DOCKER_PAC_STEM).gz
DOCKER_PAC_DBG = $(DOCKER_PAC_STEM)-$(DBG_IMAGE_MARK).gz

$(DOCKER_PAC)_PATH = $(DOCKERS_PATH)/$(DOCKER_PAC_STEM)

$(DOCKER_PAC)_DEPENDS += $(SWSS) $(SONIC_PAC) $(HOSTAPD) $(LIBSWSSCOMMON) $(LIBNL3) $(LIBNL_GENL3) $(LIBNL_ROUTE3) $(SONIC_UTILITIES_DATA)
$(DOCKER_PAC)_DBG_DEPENDS = $($(DOCKER_CONFIG_ENGINE_BULLSEYE)_DBG_DEPENDS)
$(DOCKER_PAC)_DBG_DEPENDS += $(SWSS_DBG) $(HOSTAPD_DBG) $(LIBSWSSCOMMON_DBG)
$(DOCKER_PAC)_DBG_IMAGE_PACKAGES = $($(DOCKER_CONFIG_ENGINE_BULLSEYE)_DBG_IMAGE_PACKAGES)

$(DOCKER_PAC)_LOAD_DOCKERS += $(DOCKER_CONFIG_ENGINE_BULLSEYE)

$(DOCKER_PAC)_VERSION = 1.0.0
$(DOCKER_PAC)_PACKAGE_NAME = pac
$(DOCKER_PAC)_WARM_SHUTDOWN_BEFORE = swss
$(DOCKER_PAC)_FAST_SHUTDOWN_BEFORE = swss


SONIC_DOCKER_IMAGES += $(DOCKER_PAC)
ifeq ($(INCLUDE_PAC), y)
SONIC_INSTALL_DOCKER_IMAGES += $(DOCKER_PAC)
endif

SONIC_DOCKER_DBG_IMAGES += $(DOCKER_PAC_DBG)
ifeq ($(INCLUDE_PAC), y)
SONIC_INSTALL_DOCKER_DBG_IMAGES += $(DOCKER_PAC_DBG)
endif

$(DOCKER_PAC)_CONTAINER_NAME = pac
$(DOCKER_PAC)_RUN_OPT += --privileged -t
$(DOCKER_PAC)_RUN_OPT += -v /etc/sonic:/etc/sonic:ro
$(DOCKER_PAC)_RUN_OPT += -v /etc/timezone:/etc/timezone:ro 
$(DOCKER_PAC)_RUN_OPT += -v /host/warmboot:/var/warmboot

#$(DOCKER_PAC)_BASE_IMAGE_FILES += psample:/usr/bin/psample
#$(DOCKER_PAC)_BASE_IMAGE_FILES += sflowtool:/usr/bin/sflowtool
$(DOCKER_PAC)_FILES += $(SUPERVISOR_PROC_EXIT_LISTENER_SCRIPT)

SONIC_BULLSEYE_DOCKERS += $(DOCKER_PAC)
SONIC_BULLSEYE_DBG_DOCKERS += $(DOCKER_PAC_DBG)
